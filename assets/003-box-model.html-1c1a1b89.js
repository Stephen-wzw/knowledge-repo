import{_ as a,W as i,X as s,Y as c,Z as e,a0 as d,a1 as t,a2 as o,C as r}from"./framework-ea1f725f.js";const l="/blog/assets/image/frontend/basic/css/003/box.png",p="/blog/assets/image/frontend/basic/css/003/normal-box.png",g="/blog/assets/image/frontend/basic/css/003/abnormal-box.png",u={},b=o('<h2 id="盒模型" tabindex="-1"><a class="header-anchor" href="#盒模型" aria-hidden="true">#</a> 盒模型</h2><p>所有的 HTML 元素都可以看作一个盒子，他由外边距 <code>margin</code>、边框 <code>border</code>、内边距 <code>padding</code>和内容区 <code>content</code> 组成。</p><figure><img src="'+l+'" alt="盒模型" tabindex="0" loading="lazy"><figcaption>盒模型</figcaption></figure><h2 id="标准盒模型和怪异盒模型" tabindex="-1"><a class="header-anchor" href="#标准盒模型和怪异盒模型" aria-hidden="true">#</a> 标准盒模型和怪异盒模型</h2>',4),h=o('<p>他们表现在盒模型中差异：</p><ul><li>标准盒模型：<code>width</code> 和 <code>height</code> 的计算值都不包含 <code>border</code> 和 <code>padding</code>，而只会应用到这个元素的 <code>content</code>。</li></ul><figure><img src="'+p+'" alt="标准盒模型" width="50%" height="50%" tabindex="0" loading="lazy"><figcaption>标准盒模型</figcaption></figure><ul><li>怪异盒模型：<code>width</code> 和 <code>height</code> 属性包括 <code>content</code>、<code>padding</code> 和 <code>border</code>，不算 <code>margin</code>。</li></ul><figure><img src="'+g+`" alt="怪异盒模型" width="50%" height="50%" tabindex="0" loading="lazy"><figcaption>怪异盒模型</figcaption></figure><h2 id="box-sizing" tabindex="-1"><a class="header-anchor" href="#box-sizing" aria-hidden="true">#</a> box-sizing</h2><p>在 CSS 中，可以设置 <code>box-sizing</code> 属性来设置盒子模型。语法如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box|border-box|inherit<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>content-box</code>：标准盒模型；</li><li><code>border-box</code>：怪异盒模型；</li><li><code>inherit</code>：规定应从父元素继承 <code>box-sizing</code> 属性的值。</li></ul><p>一般希望将 <code>box-sizing</code> 设置为 <code>border-box</code>，能使我们更容易地设定一个元素的宽高：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function m(x,f){const n=r("RouterLink");return i(),s("div",null,[b,c("p",null,[e("在 "),d(n,{to:"/frontend/basic/html/003-doctype.html"},{default:t(()=>[e("DOCTYPE")]),_:1}),e(" 中提到了浏览器的渲染模式，现代的浏览器一般都有两种渲染模式：标准模式和怪异模式。")]),h])}const v=a(u,[["render",m],["__file","003-box-model.html.vue"]]);export{v as default};
