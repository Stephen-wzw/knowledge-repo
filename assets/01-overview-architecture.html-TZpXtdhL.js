import{_ as r,r as c,o as a,c as d,a as e,d as t,b as i,e as s}from"./app-pUFJyV0S.js";const n={},p={href:"https://github.com/expressjs/express",target:"_blank",rel:"noopener noreferrer"},l=s('<h2 id="核心组件" tabindex="-1"><a class="header-anchor" href="#核心组件"><span>核心组件</span></a></h2><p>包括 <code>Application</code>、<code>Request</code>、<code>Response</code> 和 <code>Router</code>：</p><ul><li><code>Application</code>：应用程序对象，由 <code>express()</code> 创建，它代表一个 Express 应用程序，用于通过设置中间件、路由和错误处理程序来配置应用程序。</li><li><code>Request</code>： HTTP 请求实例，该对象封装了传入请求的所有信息，如 <code>header</code>、<code>query parameters</code>、<code>URL</code>、<code>body</code> 等。</li><li><code>Response</code>：HTTP 响应实例，该对象用于向客户端发回数据、设置响应 <code>header</code>、<code>cookie</code>、状态代码等。</li><li><code>Router</code>: 路由器对象，由 <code>express.Router()</code> 创建，一个小型 <code>Application</code>，可拥有自己的路由和中间件。它有助于将应用组织成更小的、模块化的部分。</li></ul><h2 id="middleware" tabindex="-1"><a class="header-anchor" href="#middleware"><span>Middleware</span></a></h2><p>可以访问请求（<code>req</code>）、响应（<code>res</code>）以及应用程序请求-响应循环中下一个中间件函数的函数。中间件可以执行任何代码、修改请求和响应对象、结束请求-响应循环或调用下一个中间件函数。</p><p>在 Express 中，有不同类型的中间件：</p><ul><li>应用程序级中间件：与 <code>Express</code> 应用程序实例绑定。</li><li>路由器级中间件：与 <code>express.Router()</code> 实例绑定。</li><li>内置中间件：如 <code>express.json()</code> 和 <code>express.static()</code>。</li><li>错误处理中间件：能捕捉错误并进行处理的特殊中间件。</li></ul><p>中间件按照应用程序中定义的顺序执行。 如果中间件函数没有结束请求-响应循环（调用 <code>res.end()</code>），则必须调用 <code>next()</code> 将控制权传递给下一个中间件函数。</p><h2 id="routing" tabindex="-1"><a class="header-anchor" href="#routing"><span>Routing</span></a></h2><p>路由定义了应用程序响应客户端请求的端点（URI）。每个路由可以有多个处理程序，并支持所有 HTTP 方法（GET、POST、PUT、DELETE 等）。</p><p>支持自动解析 <code>query parameters</code> 和 <code>URL</code> 中的 <code>:param</code> 值。</p><p>简单理解为分发请求并进行相应处理。</p>',12);function h(u,m){const o=c("ExternalLinkIcon");return a(),d("div",null,[e("p",null,[e("a",p,[t("Express"),i(o)]),t(" 是适用于 Node.js 的极简网络应用程序框架。它为构建网络和移动应用程序提供了一套强大的功能。尽管简单，Express 却具有很强的可扩展性，允许开发人员添加中间件并自定义应用程序的行为。")]),l])}const g=r(n,[["render",h],["__file","01-overview-architecture.html.vue"]]),b=JSON.parse('{"path":"/backend/node/express/01-overview-architecture.html","title":"总体架构","lang":"zh-CN","frontmatter":{"title":"总体架构","date":"2024-08-20T00:00:00.000Z","icon":"architecture","category":["node"],"tag":["express","architecture"],"description":"Express 是适用于 Node.js 的极简网络应用程序框架。它为构建网络和移动应用程序提供了一套强大的功能。尽管简单，Express 却具有很强的可扩展性，允许开发人员添加中间件并自定义应用程序的行为。 核心组件 包括 Application、Request、Response 和 Router： Application：应用程序对象，由 expr...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/backend/node/express/01-overview-architecture.html"}],["meta",{"property":"og:title","content":"总体架构"}],["meta",{"property":"og:description","content":"Express 是适用于 Node.js 的极简网络应用程序框架。它为构建网络和移动应用程序提供了一套强大的功能。尽管简单，Express 却具有很强的可扩展性，允许开发人员添加中间件并自定义应用程序的行为。 核心组件 包括 Application、Request、Response 和 Router： Application：应用程序对象，由 expr..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-23T10:06:24.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"express"}],["meta",{"property":"article:tag","content":"architecture"}],["meta",{"property":"article:published_time","content":"2024-08-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-23T10:06:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"总体架构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-23T10:06:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 核心组件","slug":"核心组件","link":"#核心组件","children":[]},{"level":2,"title":"2 Middleware","slug":"middleware","link":"#middleware","children":[]},{"level":2,"title":"3 Routing","slug":"routing","link":"#routing","children":[]}],"git":{"createdTime":1724407584000,"updatedTime":1724407584000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":1}]},"readingTime":{"minutes":1.8,"words":540},"filePathRelative":"backend/node/express/01-overview-architecture.md","localizedDate":"2024年8月20日","excerpt":"","autoDesc":true}');export{g as comp,b as data};
