import{_ as e,o as n,c as t,e as a}from"./app-c2PwqoB5.js";const o={},s=a(`<p><code>fnm</code> 会根据当前 Node 版本创建独立的模块目录，若频繁切换版本，则需要重新安装模块。</p><p>为了提高开发体验，我们可能需要全局共享模块，虽然这会在一定程度上造成版本冲突的可能性，但可以减少切换版本时重新安装模块的麻烦。</p><p><code>fnm</code> 设置全局共享模块步骤：</p><ol><li>创建全局共享模块目录<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/.npm_global
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>设置 <code>npm</code> 全局模块目录<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix ~/.npm_global
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>更新环境变量<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;export PATH=~/.npm_global/bin:\\<span class="token environment constant">$PATH</span>&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
<span class="token builtin class-name">source</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>配置完成后，通过 <code>npm install -g</code> 安装的全局模块会存储在 <code>~/.npm_global</code> 中，不再受 Node.js 版本切换的影响。</p>`,5),i=[s];function l(r,c){return n(),t("div",null,i)}const p=e(o,[["render",l],["__file","07-fnm-global-module-shared.html.vue"]]),m=JSON.parse('{"path":"/frontend/engineering/basic/07-fnm-global-module-shared.html","title":"fnm 全局共享模块","lang":"zh-CN","frontmatter":{"title":"fnm 全局共享模块","date":"2024-11-05T00:00:00.000Z","icon":"relation","category":["工程化"],"tag":["frontend","node","fnm","node package manager"],"description":"fnm 会根据当前 Node 版本创建独立的模块目录，若频繁切换版本，则需要重新安装模块。 为了提高开发体验，我们可能需要全局共享模块，虽然这会在一定程度上造成版本冲突的可能性，但可以减少切换版本时重新安装模块的麻烦。 fnm 设置全局共享模块步骤： 创建全局共享模块目录 设置 npm 全局模块目录 更新环境变量 配置完成后，通过 npm instal...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/frontend/engineering/basic/07-fnm-global-module-shared.html"}],["meta",{"property":"og:title","content":"fnm 全局共享模块"}],["meta",{"property":"og:description","content":"fnm 会根据当前 Node 版本创建独立的模块目录，若频繁切换版本，则需要重新安装模块。 为了提高开发体验，我们可能需要全局共享模块，虽然这会在一定程度上造成版本冲突的可能性，但可以减少切换版本时重新安装模块的麻烦。 fnm 设置全局共享模块步骤： 创建全局共享模块目录 设置 npm 全局模块目录 更新环境变量 配置完成后，通过 npm instal..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-05T11:10:09.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"frontend"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"fnm"}],["meta",{"property":"article:tag","content":"node package manager"}],["meta",{"property":"article:published_time","content":"2024-11-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-05T11:10:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"fnm 全局共享模块\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-05T11:10:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[],"git":{"createdTime":1730805009000,"updatedTime":1730805009000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":1}]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"frontend/engineering/basic/07-fnm-global-module-shared.md","localizedDate":"2024年11月5日","excerpt":"","autoDesc":true}');export{p as comp,m as data};
