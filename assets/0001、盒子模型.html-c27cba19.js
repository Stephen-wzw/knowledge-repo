import{_ as s,W as a,X as c,Y as i,Z as e,a0 as d,a1 as t,a2 as o,C as r}from"./framework-ea1f725f.js";const l="/blog/assets/box-0e126aac.png",p="/blog/assets/normal-box-e86b4484.png",u="/blog/assets/abnormal-box-307c6e79.png",b={},g=o('<h2 id="盒模型" tabindex="-1"><a class="header-anchor" href="#盒模型" aria-hidden="true">#</a> 盒模型</h2><p>所有的 HTML 元素都可以看作一个盒子，他由外边距 <code>margin</code>、边框 <code>border</code>、内边距 <code>padding</code>和内容区 <code>content</code> 组成。</p><figure><img src="'+l+'" alt="盒模型" tabindex="0" loading="lazy"><figcaption>盒模型</figcaption></figure><h2 id="标准盒模型和怪异盒模型" tabindex="-1"><a class="header-anchor" href="#标准盒模型和怪异盒模型" aria-hidden="true">#</a> 标准盒模型和怪异盒模型</h2>',4),h=o('<p>他们表现在盒模型中差异：</p><ul><li>标准盒模型：<code>width</code> 和 <code>height</code> 的计算值都不包含 <code>border</code> 和 <code>padding</code>，而只会应用到这个元素的 <code>content</code>。 <img src="'+p+'" alt="普通盒模型" style="zoom:50%;"></li><li>怪异盒模型：<code>width</code> 和 <code>height</code> 属性包括 <code>content</code>、<code>padding</code> 和 <code>border</code>，不算 <code>margin</code>。 <img src="'+u+`" alt="怪异盒模型" style="zoom:50%;"></li></ul><h2 id="box-sizing" tabindex="-1"><a class="header-anchor" href="#box-sizing" aria-hidden="true">#</a> box-sizing</h2><p>在 CSS 中，可以设置 <code>box-sizing</code> 属性来设置盒子模型。语法如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">box-sizing</span><span class="token punctuation">:</span> content-box|border-box|inherit<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>content-box：标准盒模型；</li><li>border-box：怪异盒模型；</li><li>inherit：规定应从父元素继承 box-sizing 属性的值。</li></ul><p>一般希望将 <code>box-sizing</code> 设置为 <code>border-box</code>，能使我们更容易地设定一个元素的宽高：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span> <span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function m(_,x){const n=r("RouterLink");return a(),c("div",null,[g,i("p",null,[e("在 "),d(n,{to:"/frontend/basic/html/0001%E3%80%81DOCTYPE.html"},{default:t(()=>[e("DOCTYPE")]),_:1}),e(" 中提到了浏览器的渲染模式，现代的浏览器一般都有两种渲染模式：标准模式和怪异模式。")]),h])}const f=s(b,[["render",m],["__file","0001、盒子模型.html.vue"]]);export{f as default};
