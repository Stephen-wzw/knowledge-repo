import{_ as l,o as t,c as e,f as i}from"./app-iaDXWvXy.js";const c={},o=i('<p>HTML5 中加入了一些语义化标签，来更清晰的表达文档结构。</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/tag.png" alt="语义化标签" tabindex="0" loading="lazy"><figcaption>语义化标签</figcaption></figure><ul><li><code>&lt;header&gt;</code>：页眉。</li><li><code>&lt;nav&gt;</code>：导航栏。</li><li><code>&lt;main&gt;</code>：主内容。主内容中还可以有各种子内容区段，可用 <code>&lt;article&gt;</code>、<code>&lt;section&gt;</code> 和 <code>&lt;div&gt;</code> 等元素表示。</li><li><code>&lt;aside&gt;</code>：侧边栏，经常嵌套在 <code>&lt;main&gt;</code> 中。</li><li><code>&lt;footer&gt;</code>：页脚。</li></ul><p>语义化优点：</p><ul><li>易于用户阅读，在丢失 CSS 样式的时候仍能呈现清晰的结构；</li><li>方便屏幕阅读器解析，如盲人阅读器根据标签渲染网页；</li><li>提升用户体验，例如 title、alt 可以用于解释名称或图片信息；</li><li>便于 SEO 搜索引擎优化，搜索引擎根据标签来确定上下文和关键字的权重；</li><li>有利于开发人员维护。</li></ul><p>缺点：</p><ul><li>存在兼容性问题，HTML5 语义化标签在 IE8 下，默认当成行内元素展示。</li></ul>',7),a=[o];function n(d,r){return t(),e("div",null,a)}const s=l(c,[["render",n],["__file","006-semantically-meaningful-tags.html.vue"]]);export{s as default};
