import{_ as e,o as i,c as t,e as l}from"./app-k6Sfu6di.js";const a={},r=l('<h2 id="我的源码让猫吃了" tabindex="-1"><a class="header-anchor" href="#我的源码让猫吃了"><span>我的源码让猫吃了</span></a></h2><ul><li>为问题负责，提供解决方案。</li></ul><h2 id="软件的熵" tabindex="-1"><a class="header-anchor" href="#软件的熵"><span>软件的熵</span></a></h2><ul><li>不要容忍破窗。</li></ul><h2 id="石头汤与煮青蛙" tabindex="-1"><a class="header-anchor" href="#石头汤与煮青蛙"><span>石头汤与煮青蛙</span></a></h2><ul><li>主动 Own 一件事情。</li><li>持续观察周围的事情，不局限于自己的工作。</li></ul><h2 id="足够好的软件" tabindex="-1"><a class="header-anchor" href="#足够好的软件"><span>足够好的软件</span></a></h2><ul><li>让质量成为需求问题（先交付再持续根据用户反馈进行优化）。</li><li>不要过度设计。</li></ul><h2 id="你的知识资产" tabindex="-1"><a class="header-anchor" href="#你的知识资产"><span>你的知识资产</span></a></h2><p>经营你的资产：</p><ul><li>不断学习，不断提升自己的技能。</li><li>保持学习的广度。</li><li>在新的技术流行之前学习。</li></ul><p>目标：</p><ul><li>每年至少学习一种新语言（或框架）。</li><li>每季度阅读一本技术书籍。</li><li>也要阅读一些非技术类的书籍。</li><li>上课。</li><li>参加技术会议。</li><li>试验不同的环境。</li><li>订阅技术杂志，跟上潮流。</li></ul><p>在学习时，需要批判地进行思考，不要盲目地接受。</p><h2 id="交流" tabindex="-1"><a class="header-anchor" href="#交流"><span>交流</span></a></h2><ul><li>知道你要说什么。</li><li>了解你的听众。</li><li>选择时机。</li><li>选择风格。</li><li>让文档美观。</li><li>让听众参与。</li><li>做倾听者，如果你不听观众说话，那观众也不会听你说话。</li><li>记得回复他人。</li></ul>',16),n=[r];function o(c,p){return i(),t("div",null,n)}const s=e(a,[["render",o],["__file","01-a-pragmatic-philosophy.html.vue"]]),d=JSON.parse('{"path":"/reading/pragmatic-programmer/01-a-pragmatic-philosophy.html","title":"注重实效的哲学","lang":"zh-CN","frontmatter":{"title":"注重实效的哲学","date":"2024-02-18T00:00:00.000Z","icon":"creative","category":["READING"],"tag":["pragmatic"],"description":"我的源码让猫吃了 为问题负责，提供解决方案。 软件的熵 不要容忍破窗。 石头汤与煮青蛙 主动 Own 一件事情。 持续观察周围的事情，不局限于自己的工作。 足够好的软件 让质量成为需求问题（先交付再持续根据用户反馈进行优化）。 不要过度设计。 你的知识资产 经营你的资产： 不断学习，不断提升自己的技能。 保持学习的广度。 在新的技术流行之前学习。 目标...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/reading/pragmatic-programmer/01-a-pragmatic-philosophy.html"}],["meta",{"property":"og:title","content":"注重实效的哲学"}],["meta",{"property":"og:description","content":"我的源码让猫吃了 为问题负责，提供解决方案。 软件的熵 不要容忍破窗。 石头汤与煮青蛙 主动 Own 一件事情。 持续观察周围的事情，不局限于自己的工作。 足够好的软件 让质量成为需求问题（先交付再持续根据用户反馈进行优化）。 不要过度设计。 你的知识资产 经营你的资产： 不断学习，不断提升自己的技能。 保持学习的广度。 在新的技术流行之前学习。 目标..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-18T11:14:31.000Z"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"pragmatic"}],["meta",{"property":"article:published_time","content":"2024-02-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-18T11:14:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"注重实效的哲学\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-18T11:14:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 我的源码让猫吃了","slug":"我的源码让猫吃了","link":"#我的源码让猫吃了","children":[]},{"level":2,"title":"2 软件的熵","slug":"软件的熵","link":"#软件的熵","children":[]},{"level":2,"title":"3 石头汤与煮青蛙","slug":"石头汤与煮青蛙","link":"#石头汤与煮青蛙","children":[]},{"level":2,"title":"4 足够好的软件","slug":"足够好的软件","link":"#足够好的软件","children":[]},{"level":2,"title":"5 你的知识资产","slug":"你的知识资产","link":"#你的知识资产","children":[]},{"level":2,"title":"6 交流","slug":"交流","link":"#交流","children":[]}],"git":{"createdTime":1708254871000,"updatedTime":1708254871000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":1}]},"readingTime":{"minutes":1.02,"words":306},"filePathRelative":"reading/pragmatic-programmer/01-a-pragmatic-philosophy.md","localizedDate":"2024年2月18日","excerpt":"","autoDesc":true}');export{s as comp,d as data};
