import{_ as p,r as o,o as i,c as l,a as s,d as n,b as e,e as a}from"./app-zjucBfq7.js";const c={},r=a(`<p>将不同平台的信息汇总到一个平台中。</p><h2 id="信息获取的问题" tabindex="-1"><a class="header-anchor" href="#信息获取的问题"><span>信息获取的问题</span></a></h2><ul><li>信息多而杂</li><li>无法形成有效阅读</li></ul><h3 id="信息多而杂" tabindex="-1"><a class="header-anchor" href="#信息多而杂"><span>信息多而杂</span></a></h3><p>信息来自不同平台，需要打开不同的软件，知乎、掘金、公众号、B 站、GitHub 等等。</p><p>每个平台都充斥着各种你不需要的信息，很容易被其他信息分散注意力。</p><p>有时候为了刷到想要的信息，需要长时间停留。</p><h3 id="无法形成有效阅读" tabindex="-1"><a class="header-anchor" href="#无法形成有效阅读"><span>无法形成有效阅读</span></a></h3><p>以微信公众号为例，除了一些技术公众号，大部分关注的还是非技术类的，对技术知识获取是一种干扰。</p><p>同时由于我们基本都在手机上阅读公众号的文章，难以进行信息提取、标注等，无法形成有效的知识积累。</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240224191619.png" alt="微信公众号" tabindex="0" loading="lazy"><figcaption>微信公众号</figcaption></figure><h2 id="rss-rdf-site-summary" tabindex="-1"><a class="header-anchor" href="#rss-rdf-site-summary"><span>RSS(RDF Site Summary)</span></a></h2><p>内容共享通常发生在特定网站和聚合网站之间。这种交流是以基本的 XML 形式进行的，人和机器都可以读取。要为网站设置 RSS，必须创建一个 XML 文件，即 RSS 文档或 RSS Feed。发明人为「阿龙·斯沃茨」。</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240224190921.png" alt="Aaron Swartz" tabindex="0" loading="lazy"><figcaption>Aaron Swartz</figcaption></figure><p>下面是一个 RSS 文档示例。</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rss</span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>channel</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>RSS title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span><span class="token punctuation">&gt;</span></span> https://mywebsitename/index.html <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>My Blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>My First Feed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span><span class="token punctuation">&gt;</span></span>http://mywebsitename/blog/article/1.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>My new article<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>My Second Feed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span><span class="token punctuation">&gt;</span></span>http://mywebsitename/blog/article/2.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>link</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>Another new article<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>channel</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rss</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>首先是 XML 标签、其版本和编码方案。</li><li>下面一行标志着 RSS 标签的开始及其使用的版本。</li><li>接下来的几行显示了频道标签，它标志着 RSS Feed 的开始。它包含频道标题、超链接和频道描述。</li><li>在频道标签中定义了一个或多个项目，基本上就是内容或故事，每个项目都有自己的标题、链接和说明。</li><li>频道可以容纳任何形式的数据--图片、gifs、音频等。</li><li>每个项目都有自己独特的 XML 标签。</li></ul><h2 id="如何获取-rss" tabindex="-1"><a class="header-anchor" href="#如何获取-rss"><span>如何获取 RSS</span></a></h2><p>最直接的方法就是看网站的底部或侧边栏是否有 RSS 图标。</p>`,19),u=s("code",null,"/feed",-1),d=s("code",null,"/rss",-1),k={href:"https://sspai.com/feed%E3%80%82",target:"_blank",rel:"noopener noreferrer"},m=a('<figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225111610.png" alt="RSS 图标" tabindex="0" loading="lazy"><figcaption>RSS 图标</figcaption></figure><p>当然，你也可以直接通过搜索引擎通过 网站名 + RSS 的关键字进行搜索，往往都能找到支持网站的 RSS 链接。</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225111905.png" alt="搜索引擎" tabindex="0" loading="lazy"><figcaption>搜索引擎</figcaption></figure><h3 id="制作订阅源-——-rsshub" tabindex="-1"><a class="header-anchor" href="#制作订阅源-——-rsshub"><span>制作订阅源 —— RSSHub</span></a></h3><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225110516.png" alt="RSSHub" tabindex="0" loading="lazy"><figcaption>RSSHub</figcaption></figure><h3 id="检测订阅源-——-rsshub-radar" tabindex="-1"><a class="header-anchor" href="#检测订阅源-——-rsshub-radar"><span>检测订阅源 —— RSSHub Radar</span></a></h3><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225111133.png" alt="RSSHub Radar" tabindex="0" loading="lazy"><figcaption>RSSHub Radar</figcaption></figure><h3 id="rss-阅读工具" tabindex="-1"><a class="header-anchor" href="#rss-阅读工具"><span>RSS 阅读工具</span></a></h3><ul><li>macOS：Reeder 4</li><li>iOS：lire</li><li>Windows：RSS 追踪</li><li>Android：FeedMe</li><li>浏览器：Innoreader</li></ul><h2 id="贡献-rsshub" tabindex="-1"><a class="header-anchor" href="#贡献-rsshub"><span>贡献 RSSHub</span></a></h2><p>如果 RSSHub 提供的订阅源有缺陷，那么我们可以贡献 RSSHub。</p>',11),v={href:"https://docs.rsshub.app/zh/joinus/quick-start",target:"_blank",rel:"noopener noreferrer"},g=a(`<h3 id="安装开发环境" tabindex="-1"><a class="header-anchor" href="#安装开发环境"><span>安装开发环境</span></a></h3><ul><li><code>fork</code> 然后将你的项目 <code>git clone</code> 到本地。</li><li>给你的项目增加上游：<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> upstream https://github.com/DIYgod/RSSHub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>安装 <code>pnpm</code><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token function">pnpm</span> <span class="token parameter variable">-g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>安装依赖并启动项目<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span>
<span class="token function">pnpm</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="添加脚本路由" tabindex="-1"><a class="header-anchor" href="#添加脚本路由"><span>添加脚本路由</span></a></h3><p><code>lib/v2/juejin/router.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">router</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/collections/:userId&#39;</span><span class="token punctuation">,</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./favorites&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取收藏夹数据" tabindex="-1"><a class="header-anchor" href="#获取收藏夹数据"><span>获取收藏夹数据</span></a></h3><p><code>lib/v2/juejin/favorites.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Get all collection by loop
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">user_id</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>any<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> collectionSet
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">getCollectionList</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">user_id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> collectionList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> cursor <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span>

  <span class="token keyword">let</span> has_more <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>has_more<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// eslint-disable-next-line no-await-in-loop</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">got</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://api.juejin.cn/interact_api/v2/collectionset/list?spider=0</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">json</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        user_id<span class="token punctuation">,</span>
        cursor<span class="token punctuation">,</span>
        <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">20</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    collectionList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>has_more<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cursor <span class="token operator">=</span> res<span class="token punctuation">.</span>cursor
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      has_more <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> collectionList
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取文章数据" tabindex="-1"><a class="header-anchor" href="#获取文章数据"><span>获取文章数据</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Get all posts by collection_id
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">collection_id</span>
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>any<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> posts
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">getPostList</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">collection_id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> postList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> cursor <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span>

  <span class="token keyword">let</span> has_more <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>has_more<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// eslint-disable-next-line no-await-in-loop</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">got</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://api.juejin.cn/interact_api/v2/collectionset/detail?spider=0</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">json</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        collection_id<span class="token punctuation">,</span>
        cursor<span class="token punctuation">,</span>
        <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">10</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    postList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>articles<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>has_more<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cursor <span class="token operator">=</span> res<span class="token punctuation">.</span>cursor
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      has_more <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> postList
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成-rss-源" tabindex="-1"><a class="header-anchor" href="#生成-rss-源"><span>生成 RSS 源</span></a></h3><p>获取数据后，只需将相关数据赋值给 <code>ctx.state.data</code> 对象。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> userId <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params

  <span class="token comment">// 获取用户所有收藏夹id</span>
  <span class="token keyword">const</span> collectionList <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getCollectionList</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span>
  <span class="token keyword">const</span> collectionIds <span class="token operator">=</span> collectionList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>collection_id<span class="token punctuation">)</span>

  <span class="token comment">// 获取所有收藏夹文章内容</span>
  <span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>collectionIds<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>getPostList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> util<span class="token punctuation">.</span><span class="token function">ProcessFeed</span><span class="token punctuation">(</span>posts<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>cache<span class="token punctuation">)</span>

  ctx<span class="token punctuation">.</span>state<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;掘金 - 收藏集&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://juejin.im/user/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/collections</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;掘金，指定用户整个收藏集&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">item</span><span class="token operator">:</span> result<span class="token punctuation">,</span>
    <span class="token literal-property property">allowEmpty</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="调试" tabindex="-1"><a class="header-anchor" href="#调试"><span>调试</span></a></h3><p>运行 <code>pnpm dev</code> 命令：</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225115649.png" alt="debug" tabindex="0" loading="lazy"><figcaption>debug</figcaption></figure><p>输入对应路由：</p><figure><img src="https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225115815.png" alt="router" tabindex="0" loading="lazy"><figcaption>router</figcaption></figure>`,18);function b(h,y){const t=o("ExternalLinkIcon");return i(),l("div",null,[r,s("p",null,[n("大多数情况下，支持 RSS 订阅的网站都会将 RSS 图标展示出来。不过总有例外，这时候你也可以尝试在网站域名后面加上 "),u,n(" 或 "),d,n(" 或许可以碰巧猜中，比如少数派的 RSS 订阅链接就是 "),s("a",k,[n("https://sspai.com/feed。"),e(t)])]),m,s("p",null,[s("a",v,[n("官方文档"),e(t)]),n(" 比较详细，按照步骤来即可。")]),g])}const S=p(c,[["render",b],["__file","index.html.vue"]]),w=JSON.parse('{"path":"/project/RSSHub/","title":"集中管理碎片化知识","lang":"zh-CN","frontmatter":{"title":"集中管理碎片化知识","date":"2024-02-24T00:00:00.000Z","icon":"rss","category":["Project"],"tag":["rss"],"description":"将不同平台的信息汇总到一个平台中。 信息获取的问题 信息多而杂 无法形成有效阅读 信息多而杂 信息来自不同平台，需要打开不同的软件，知乎、掘金、公众号、B 站、GitHub 等等。 每个平台都充斥着各种你不需要的信息，很容易被其他信息分散注意力。 有时候为了刷到想要的信息，需要长时间停留。 无法形成有效阅读 以微信公众号为例，除了一些技术公众号，大部分...","head":[["meta",{"property":"og:url","content":"https://dribble-njr.github.io/blog/blog/project/RSSHub/"}],["meta",{"property":"og:title","content":"集中管理碎片化知识"}],["meta",{"property":"og:description","content":"将不同平台的信息汇总到一个平台中。 信息获取的问题 信息多而杂 无法形成有效阅读 信息多而杂 信息来自不同平台，需要打开不同的软件，知乎、掘金、公众号、B 站、GitHub 等等。 每个平台都充斥着各种你不需要的信息，很容易被其他信息分散注意力。 有时候为了刷到想要的信息，需要长时间停留。 无法形成有效阅读 以微信公众号为例，除了一些技术公众号，大部分..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240224191619.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-25T13:18:23.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"集中管理碎片化知识"}],["meta",{"property":"article:author","content":"njr"}],["meta",{"property":"article:tag","content":"rss"}],["meta",{"property":"article:published_time","content":"2024-02-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-25T13:18:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"集中管理碎片化知识\\",\\"image\\":[\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240224191619.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240224190921.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225111610.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225111905.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225110516.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225111133.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225115649.png\\",\\"https://raw.githubusercontent.com/dribble-njr/typora-njr/master/img/20240225115815.png\\"],\\"datePublished\\":\\"2024-02-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-25T13:18:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"njr\\",\\"url\\":\\"https://github.com/dribble-njr/blog\\",\\"email\\":\\"wzw15292257101@163.com\\"}]}"]]},"headers":[{"level":2,"title":"1 信息获取的问题","slug":"信息获取的问题","link":"#信息获取的问题","children":[{"level":3,"title":"1.1 信息多而杂","slug":"信息多而杂","link":"#信息多而杂","children":[]},{"level":3,"title":"1.2 无法形成有效阅读","slug":"无法形成有效阅读","link":"#无法形成有效阅读","children":[]}]},{"level":2,"title":"2 RSS(RDF Site Summary)","slug":"rss-rdf-site-summary","link":"#rss-rdf-site-summary","children":[]},{"level":2,"title":"3 如何获取 RSS","slug":"如何获取-rss","link":"#如何获取-rss","children":[{"level":3,"title":"3.1 制作订阅源 —— RSSHub","slug":"制作订阅源-——-rsshub","link":"#制作订阅源-——-rsshub","children":[]},{"level":3,"title":"3.2 检测订阅源 —— RSSHub Radar","slug":"检测订阅源-——-rsshub-radar","link":"#检测订阅源-——-rsshub-radar","children":[]},{"level":3,"title":"3.3 RSS 阅读工具","slug":"rss-阅读工具","link":"#rss-阅读工具","children":[]}]},{"level":2,"title":"4 贡献 RSSHub","slug":"贡献-rsshub","link":"#贡献-rsshub","children":[{"level":3,"title":"4.1 安装开发环境","slug":"安装开发环境","link":"#安装开发环境","children":[]},{"level":3,"title":"4.2 添加脚本路由","slug":"添加脚本路由","link":"#添加脚本路由","children":[]},{"level":3,"title":"4.3 获取收藏夹数据","slug":"获取收藏夹数据","link":"#获取收藏夹数据","children":[]},{"level":3,"title":"4.4 获取文章数据","slug":"获取文章数据","link":"#获取文章数据","children":[]},{"level":3,"title":"4.5 生成 RSS 源","slug":"生成-rss-源","link":"#生成-rss-源","children":[]},{"level":3,"title":"4.6 调试","slug":"调试","link":"#调试","children":[]}]}],"git":{"createdTime":1708867103000,"updatedTime":1708867103000,"contributors":[{"name":"dribble-njr","email":"wzw15292257101@163.com","commits":1}]},"readingTime":{"minutes":3.77,"words":1131},"filePathRelative":"project/RSSHub/README.md","localizedDate":"2024年2月24日","excerpt":"","autoDesc":true}');export{S as comp,w as data};
